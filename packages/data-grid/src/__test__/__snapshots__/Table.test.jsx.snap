// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test Check component matches previous HTML snapshot 1`] = `
<Table
  className=""
  columns={
    Array [
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "eventType",
        "label": "Event Type",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "affectedDevices",
        "label": "Affected Devices",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "detections",
        "label": "Detections",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "Link",
        "label": "Linked field",
      },
    ]
  }
  data={
    Array [
      Object {
        "affectedDevices": 20,
        "detections": 634,
        "eventType": "Virus/Malware",
        "id": 0,
      },
      Object {
        "affectedDevices": 20,
        "detections": 634,
        "eventType": "Spyware/Grayware",
        "id": 1,
      },
      Object {
        "affectedDevices": 15,
        "detections": 598,
        "eventType": "URL Filtering",
        "id": 2,
      },
      Object {
        "affectedDevices": 15,
        "detections": 598,
        "eventType": "Web Reputation",
        "id": 3,
      },
      Object {
        "affectedDevices": 15,
        "detections": 497,
        "eventType": "Network Virus",
        "id": 4,
      },
      Object {
        "affectedDevices": 0,
        "detections": 0,
        "eventType": "Application Control",
        "id": 5,
      },
      Object {
        "affectedDevices": 0,
        "detections": 0,
        "eventType": "Application Control",
        "id": 6,
      },
    ]
  }
  emptyStateHeader="No data available"
  emptyStateMessage="Prompt to action or solution"
  fixed={false}
  fixedColumn={false}
  headerCheckState={false}
  horizontalScroll={false}
  onHeaderChecked={[Function]}
  onRowChecked={[Function]}
  onSort={[Function]}
  rowClassName={[Function]}
  selectable={false}
  sortable={false}
  sortedColumn={
    Object {
      "direction": "",
      "sortDataKey": "",
    }
  }
>
  <div
    className=""
  >
    <table
      className="rc-table"
    >
      <ColumnHeader
        columnHeaderCallBack={[Function]}
        columns={
          Array [
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "eventType",
              "label": "Event Type",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "affectedDevices",
              "label": "Affected Devices",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "detections",
              "label": "Detections",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "Link",
              "label": "Linked field",
            },
          ]
        }
        headerCheckState={false}
        onHeaderChecked={[Function]}
        selectable={false}
        sortable={false}
        sortedColumn={
          Object {
            "direction": "",
            "sortDataKey": "",
          }
        }
      >
        <thead>
          <tr
            className="rc-table-header"
          >
            <th
              className="rc-table-header-cell"
              key="eventType"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Event Type
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="affectedDevices"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Affected Devices
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="detections"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Detections
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="Link"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Linked field
              </span>
            </th>
          </tr>
        </thead>
      </ColumnHeader>
      <tbody>
        <tr
          className="dg-table-row"
          key="0"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Virus/Malware
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            20
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            634
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="1"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Spyware/Grayware
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            20
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            634
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="2"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            URL Filtering
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            15
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            598
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="3"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Web Reputation
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            15
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            598
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="4"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Network Virus
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            15
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            497
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="5"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Application Control
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            0
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            0
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
        <tr
          className="dg-table-row"
          key="6"
        >
          <td
            className="rc-table-cell testColumnClassName"
            key="eventType"
          >
            Application Control
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="affectedDevices"
          >
            0
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="detections"
          >
            0
          </td>
          <td
            className="rc-table-cell testColumnClassName"
            key="Link"
          />
        </tr>
      </tbody>
    </table>
  </div>
</Table>
`;

exports[`Snapshot test Check component matches previous HTML snapshot 2`] = `
<Table
  className=""
  columns={
    Array [
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "eventType",
        "label": "Event Type",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "affectedDevices",
        "label": "Affected Devices",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "detections",
        "label": "Detections",
      },
      Object {
        "columnClassName": "testColumnClassName",
        "dataKey": "Link",
        "label": "Linked field",
      },
    ]
  }
  data={Array []}
  emptyStateHeader="No data available"
  emptyStateMessage="Prompt to action or solution"
  fixed={false}
  fixedColumn={false}
  headerCheckState={false}
  horizontalScroll={false}
  onHeaderChecked={[Function]}
  onRowChecked={[Function]}
  onSort={[Function]}
  rowClassName={[Function]}
  selectable={false}
  sortable={false}
  sortedColumn={
    Object {
      "direction": "",
      "sortDataKey": "",
    }
  }
>
  <div
    className=""
  >
    <table
      className="rc-table"
    >
      <ColumnHeader
        columnHeaderCallBack={[Function]}
        columns={
          Array [
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "eventType",
              "label": "Event Type",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "affectedDevices",
              "label": "Affected Devices",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "detections",
              "label": "Detections",
            },
            Object {
              "columnClassName": "testColumnClassName",
              "dataKey": "Link",
              "label": "Linked field",
            },
          ]
        }
        headerCheckState={false}
        onHeaderChecked={[Function]}
        selectable={false}
        sortable={false}
        sortedColumn={
          Object {
            "direction": "",
            "sortDataKey": "",
          }
        }
      >
        <thead>
          <tr
            className="rc-table-header"
          >
            <th
              className="rc-table-header-cell"
              key="eventType"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Event Type
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="affectedDevices"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Affected Devices
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="detections"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Detections
              </span>
            </th>
            <th
              className="rc-table-header-cell"
              key="Link"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
            >
              <span
                as="h6"
                className=""
                color="medium"
              >
                Linked field
              </span>
            </th>
          </tr>
        </thead>
      </ColumnHeader>
      <tbody />
    </table>
    <div
      className="dg-empty-state-container"
    >
      <Heading
        allCaps={false}
        as="h3"
        className="dg-empty-state-header"
        color="medium"
        hero={false}
        label={false}
      >
        <h3
          className="rc-heading rc-heading-h3 rc-heading-medium dg-empty-state-header"
        >
          No data available
        </h3>
      </Heading>
      <Text
        as="div"
        className="dg-empty-state-message"
        color="medium"
        size="medium"
        style={Object {}}
      >
        <div
          className="rc-text rc-text-size-medium rc-text-medium dg-empty-state-message"
          style={Object {}}
        >
          Prompt to action or solution
        </div>
      </Text>
    </div>
  </div>
</Table>
`;
